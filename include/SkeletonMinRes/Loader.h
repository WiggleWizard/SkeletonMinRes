#pragma once

#include <cstddef>
#include <string>

// This file gets auto-generated by CMake from your resources:
#include "Resources.h"


namespace SkeletonMinRes
{

class Resource
{
public:
	Resource(const char* start, const std::size_t len)
		: _resourceData(start)
		, _dataLen(len)
	{}

	const char* const& Data() const { return _resourceData; }
	const std::size_t& Size() const { return _dataLen; }

	const char* Begin() const { return _resourceData; }
	const char* End() const { return _resourceData + _dataLen; }

	std::string ToString() const { return { Data(), Size() }; }

private:
	const char* _resourceData;
	const size_t _dataLen;
};

}

#define LOAD_RESOURCE(x) ([]() { return SkeletonMinRes::Resource(res::_resource_##x, res::_resource_##x##_len); })()